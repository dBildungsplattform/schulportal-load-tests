/**
 * dBildungs IAM
 * The dBildungs IAM server API description
 *
 * OpenAPI spec version: 1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { PersonBirthParams } from "../models/PersonBirthParams.ts";
import { PersonEmailResponse } from "../models/PersonEmailResponse.ts";
import { PersonNameParams } from "../models/PersonNameParams.ts";
import { UserLockParams } from "../models/UserLockParams.ts";
import { Vertrauensstufe } from "../models/Vertrauensstufe.ts";
import { HttpFile } from "../http/http.ts";

export class PersonResponse {
  "id": string;
  "referrer": string | null;
  "mandant": string;
  "name": PersonNameParams;
  "geburt": PersonBirthParams | null;
  "stammorganisation": string | null;
  "geschlecht": string | null;
  "lokalisierung": string | null;
  "vertrauensstufe": Vertrauensstufe;
  "revision": string;
  /**
   * Initiales Benutzerpasswort, muss nach der ersten Anmeldung ge√§ndert werden
   */
  "startpasswort": string;
  "personalnummer": string | null;
  "isLocked": boolean | null;
  "userLock": Array<UserLockParams> | null;
  /**
   * Date of the most recent changes for the person
   */
  "lastModified": Date;
  /**
   * Contains status and address. Returns email-address verified by OX (enabled) if available, otherwise returns most recently updated one (no prioritized status)
   */
  "email": PersonEmailResponse | null;

  static readonly discriminator: string | undefined = undefined;

  static readonly mapping: { [index: string]: string } | undefined = undefined;

  static readonly attributeTypeMap: Array<{
    name: string;
    baseName: string;
    type: string;
    format: string;
  }> = [
    {
      name: "id",
      baseName: "id",
      type: "string",
      format: "",
    },
    {
      name: "referrer",
      baseName: "referrer",
      type: "string",
      format: "",
    },
    {
      name: "mandant",
      baseName: "mandant",
      type: "string",
      format: "",
    },
    {
      name: "name",
      baseName: "name",
      type: "PersonNameParams",
      format: "",
    },
    {
      name: "geburt",
      baseName: "geburt",
      type: "PersonBirthParams",
      format: "",
    },
    {
      name: "stammorganisation",
      baseName: "stammorganisation",
      type: "string",
      format: "",
    },
    {
      name: "geschlecht",
      baseName: "geschlecht",
      type: "string",
      format: "",
    },
    {
      name: "lokalisierung",
      baseName: "lokalisierung",
      type: "string",
      format: "",
    },
    {
      name: "vertrauensstufe",
      baseName: "vertrauensstufe",
      type: "Vertrauensstufe",
      format: "",
    },
    {
      name: "revision",
      baseName: "revision",
      type: "string",
      format: "",
    },
    {
      name: "startpasswort",
      baseName: "startpasswort",
      type: "string",
      format: "",
    },
    {
      name: "personalnummer",
      baseName: "personalnummer",
      type: "string",
      format: "",
    },
    {
      name: "isLocked",
      baseName: "isLocked",
      type: "boolean",
      format: "",
    },
    {
      name: "userLock",
      baseName: "userLock",
      type: "Array<UserLockParams>",
      format: "",
    },
    {
      name: "lastModified",
      baseName: "lastModified",
      type: "Date",
      format: "date-time",
    },
    {
      name: "email",
      baseName: "email",
      type: "PersonEmailResponse",
      format: "",
    },
  ];

  static getAttributeTypeMap() {
    return PersonResponse.attributeTypeMap;
  }

  public constructor() {}
}
